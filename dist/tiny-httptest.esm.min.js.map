{"version":3,"file":"tiny-httptest.esm.min.js","sources":["../src/regex.js","../src/httptest.js"],"sourcesContent":["export const headersGet = /GET\\, HEAD\\, OPTIONS/;\r\nexport const headersContentType = /(, )?content-type(, )?/;\r\nexport const maybeJsonHeader = /^(application\\/(json|(x-)?javascript)|text\\/(javascript|x-javascript|x-json))/;\r\nexport const notEmpty = /\\w+/;\r\nexport const quoted = /^\".*\"$/;\r\n","import http from \"node:http\";\r\nimport https from \"node:https\";\r\nimport {URL} from \"node:url\";\r\nimport {coerce} from \"tiny-coerce\";\r\nimport {\r\n\theadersContentType,\r\n\theadersGet,\r\n\tmaybeJsonHeader,\r\n\tnotEmpty,\r\n\tquoted\r\n} from \"./regex.js\";\r\n\r\nimport { createRequire } from \"node:module\";\r\nconst require = createRequire(import.meta.url);\r\nconst pkg = require(\"../package.json\");\r\nconst {homepage, version} = pkg;\r\n\r\nconst jar = new Map();\r\nconst captured = new Map();\r\nconst etags = new Map();\r\nconst jsonMimetype = \"application/json\";\r\n\r\nclass Httptest {\r\n\tconstructor (uri, method, headers, body, timeout) {\r\n\t\tconst parsed = new URL(uri);\r\n\r\n\t\tthis.body = \"\";\r\n\t\tthis.capture = new Set();\r\n\t\tthis.etag = false;\r\n\t\tthis.expects = new Map();\r\n\r\n\t\tthis.expects.set(\"status\", 0);\r\n\t\tthis.expects.set(\"body\", \"\");\r\n\t\tthis.expects.set(\"headers\", new Map());\r\n\t\tthis.expects.set(\"values\", new Map());\r\n\r\n\t\tthis.headers = {};\r\n\t\tthis.options = {\r\n\t\t\tbody: body,\r\n\t\t\thostname: parsed.hostname,\r\n\t\t\tmethod: method,\r\n\t\t\tpath: `${parsed.pathname}${parsed.search}`,\r\n\t\t\tport: parsed.port,\r\n\t\t\tprotocol: parsed.protocol,\r\n\t\t\theaders: headers,\r\n\t\t\ttimeout: timeout\r\n\t\t};\r\n\r\n\t\tthis.options.headers[\"user-agent\"] = `tiny-httptest bot/${version} (${homepage})`;\r\n\r\n\t\tif (parsed.username.trim().length > 0) {\r\n\t\t\tthis.options.auth = `${parsed.username}:${parsed.password}`;\r\n\t\t\tthis.options.headers.authorization = `Basic ${btoa(this.options.auth)}`;\r\n\t\t}\r\n\r\n\t\tif (this.options.body) {\r\n\t\t\tthis.send(this.options.body);\r\n\t\t}\r\n\r\n\t\tthis.jar = false;\r\n\t\tthis.req = null;\r\n\t\tthis.res = null;\r\n\t\tthis.reuse = new Set();\r\n\t\tthis.status = 0;\r\n\t}\r\n\r\n\tcaptureHeader (name) {\r\n\t\tif (!this.capture.has(name)) {\r\n\t\t\tthis.capture.add(name);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcookies (state = true) {\r\n\t\tthis.jar = state;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tcors (arg, success = true) {\r\n\t\tconst origin = arg || this.options.hostname;\r\n\r\n\t\tthis.options.headers.origin = origin;\r\n\t\tthis.options.headers[\"access-control-request-headers\"] = \"content-type\";\r\n\r\n\t\tif (success) {\r\n\t\t\tthis.expectHeader(\"access-control-allow-methods\", headersGet);\r\n\t\t\tthis.expectHeader(\"access-control-allow-origin\", origin);\r\n\t\t\tthis.expectHeader(\"access-control-allow-credentials\", \"true\");\r\n\r\n\t\t\tif (this.options.method === \"OPTIONS\") {\r\n\t\t\t\tthis.expectHeader(\"access-control-allow-headers\", headersContentType);\r\n\t\t\t} else {\r\n\t\t\t\tthis.expectHeader(\"access-control-expose-headers\", headersContentType);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tend () {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst done = err => {\r\n\t\t\t\tif (err !== void 0) {\r\n\t\t\t\t\treject(err);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tthis.process();\r\n\t\t\t\t\t\tresolve(this);\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\treject(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tif (!this.req) {\r\n\t\t\t\tconst cmd = this.http1Request;\r\n\r\n\t\t\t\tif (this.jar) {\r\n\t\t\t\t\tconst cookie = jar.get(`${this.options.hostname}:${this.options.port}`);\r\n\r\n\t\t\t\t\tif (cookie) {\r\n\t\t\t\t\t\tthis.options.headers.cookie = cookie;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.etag) {\r\n\t\t\t\t\tconst etag = etags.get(`${this.options.hostname}:${this.options.port}${this.options.path}`);\r\n\r\n\t\t\t\t\tif (etag) {\r\n\t\t\t\t\t\tthis.options.headers[\"if-none-match\"] = etag;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.reuse.size > 0) {\r\n\t\t\t\t\tthis.reuse.forEach(k => {\r\n\t\t\t\t\t\tif (captured.has(k)) {\r\n\t\t\t\t\t\t\tthis.options.headers[k] = captured.get(k);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcmd.call(this).then(() => done(), done);\r\n\t\t\t} else {\r\n\t\t\t\tdone();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tetags (state = true) {\r\n\t\tthis.etag = state;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\texpectBody (value = notEmpty) {\r\n\t\tthis.expects.set(\"body\", value);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\texpectHeader (name, value = notEmpty) {\r\n\t\tthis.expects.get(\"headers\").set(name.toLowerCase(), value);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\texpectJson () {\r\n\t\tthis.options.headers.accept = jsonMimetype;\r\n\r\n\t\treturn this.expectHeader(\"content-type\", maybeJsonHeader);\r\n\t}\r\n\r\n\texpectStatus (value = 200) {\r\n\t\tthis.expects.set(\"status\", value);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\texpectValue (name, value) {\r\n\t\tthis.expectJson();\r\n\t\tthis.expects.get(\"values\").set(name, value);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\thttp1Request () {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis.req = (this.options.protocol === \"http:\" ? http : https).request(this.options, res => {\r\n\t\t\t\tthis.res = res;\r\n\t\t\t\tres.setEncoding(\"utf8\");\r\n\r\n\t\t\t\tres.on(\"data\", chunk => {\r\n\t\t\t\t\tthis.body += chunk;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tres.on(\"end\", resolve);\r\n\t\t\t});\r\n\r\n\t\t\tthis.req.on(\"error\", reject);\r\n\r\n\t\t\tif (this.options.body) {\r\n\t\t\t\tthis.req.write(this.options.body);\r\n\t\t\t}\r\n\r\n\t\t\tthis.req.end();\r\n\t\t});\r\n\t}\r\n\r\n\tjson (arg = undefined) {\r\n\t\tthis.options.headers[\"content-type\"] = jsonMimetype;\r\n\r\n\t\tif (arg !== undefined) {\r\n\t\t\tthis.send(arg);\r\n\t\t}\r\n\r\n\t\treturn this.expectJson();\r\n\t}\r\n\r\n\tprocess () {\r\n\t\tconst body = this.expects.get(\"body\"),\r\n\t\t\tstatus = this.expects.get(\"status\");\r\n\r\n\t\tthis.headers = this.res.headers;\r\n\t\tthis.status = this.res.statusCode;\r\n\r\n\t\tif (status && this.status !== status) {\r\n\t\t\tthis.test(this.status, status, this.warning(\"status\", this.status, status));\r\n\t\t}\r\n\r\n\t\tthis.expects.get(\"headers\").forEach((v, k) => this.test(v, this.headers[k], this.warning(\"header\", v, coerce(this.headers[k]), k)));\r\n\r\n\t\tif (this.body && maybeJsonHeader.test(this.headers[\"content-type\"] || \"\")) {\r\n\t\t\ttry {\r\n\t\t\t\tthis.body = JSON.parse(this.body);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tvoid 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (body) {\r\n\t\t\tthis.test(body, this.body, this.warning(\"body\", this.body, body));\r\n\t\t}\r\n\r\n\t\tthis.expects.get(\"values\").forEach((v, k) => this.test(v, this.body[k], this.warning(\"body\", v, this.body[k])));\r\n\r\n\t\tif (this.capture.size > 0) {\r\n\t\t\tthis.capture.forEach(k => {\r\n\t\t\t\tif (this.headers[k] !== undefined) {\r\n\t\t\t\t\tcaptured.set(k, this.headers[k]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.jar && this.headers[\"set-cookie\"]) {\r\n\t\t\tjar.set(this.options.hostname + \":\" + this.options.port, this.headers[\"set-cookie\"]);\r\n\t\t}\r\n\r\n\t\tif (this.etag && this.headers.etag) {\r\n\t\t\tetags.set(this.options.hostname + \":\" + this.options.port + this.options.path, this.headers.etag);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\treuseHeader (name) {\r\n\t\tif (!this.reuse.has(name)) {\r\n\t\t\tthis.reuse.add(name);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tsend (arg) {\r\n\t\tconst type = typeof arg;\r\n\t\tlet body = arg;\r\n\r\n\t\tif (type !== \"string\") {\r\n\t\t\ttry {\r\n\t\t\t\tbody = JSON.stringify(body, null, 0);\r\n\r\n\t\t\t\tif (!this.options.headers[\"content-type\"]) {\r\n\t\t\t\t\tthis.options.headers[\"content-type\"] = jsonMimetype;\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tvoid 0;\r\n\t\t\t}\r\n\t\t} else if (quoted.test(body) === false) {\r\n\t\t\ttry {\r\n\t\t\t\tbody = JSON.stringify(body);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tvoid 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.options.body = body;\r\n\t\tthis.options.headers[\"content-length\"] = Buffer.byteLength(body);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\ttest (arg, value, err) {\r\n\t\tlet valid;\r\n\r\n\t\tif (arg instanceof Function) {\r\n\t\t\ttry {\r\n\t\t\t\tvalid = arg(value) === true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tvalid = false;\r\n\t\t\t}\r\n\t\t} else if (arg instanceof RegExp) {\r\n\t\t\tvalid = arg !== void 0 && arg.test(value);\r\n\t\t} else if (typeof arg === \"object\" && typeof value === \"object\") {\r\n\t\t\tvalid = JSON.stringify(arg, null, 0) === JSON.stringify(value, null, 0);\r\n\t\t} else if (!isNaN(arg) && !isNaN(value)) {\r\n\t\t\tvalid = Number(arg) === Number(value);\r\n\t\t} else {\r\n\t\t\tvalid = arg === value;\r\n\t\t}\r\n\r\n\t\tif (!valid) {\r\n\t\t\tthrow new Error(err);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\twarning (type, a, b, k) {\r\n\t\tconst va = a instanceof RegExp ? `${a.toString()}.test(res.headers[\"${k}\"])` : JSON.stringify(a),\r\n\t\t\tvb = a instanceof RegExp ? true : JSON.stringify(b);\r\n\r\n\t\treturn `Unexpected ${type} value: ${va} !== ${vb}`;\r\n\t}\r\n}\r\n\r\nexport function httptest ({url = \"http://localhost\", method = \"GET\", body = null, headers = {}, timeout = 30000, http2 = false} = {}) {\r\n\tconst type = method.toUpperCase();\r\n\r\n\tif (http.METHODS.includes(type) === false) {\r\n\t\tthrow new Error(\"Invalid HTTP method\");\r\n\t}\r\n\r\n\treturn new Httptest(url, type, headers, body, timeout, http2);\r\n}\r\n"],"names":["headersGet","headersContentType","maybeJsonHeader","notEmpty","quoted","pkg","createRequire","import","meta","url","require","homepage","version","jar","Map","captured","etags","Httptest","constructor","uri","method","headers","body","timeout","parsed","URL","this","capture","Set","etag","expects","set","options","hostname","path","pathname","search","port","protocol","username","trim","length","auth","password","authorization","btoa","send","req","res","reuse","status","captureHeader","name","has","add","cookies","state","cors","arg","success","origin","expectHeader","end","Promise","resolve","reject","done","err","process","e","cmd","http1Request","cookie","get","size","forEach","k","call","then","expectBody","value","toLowerCase","expectJson","accept","expectStatus","expectValue","http","https","request","setEncoding","on","chunk","write","json","undefined","statusCode","test","warning","v","coerce","JSON","parse","reuseHeader","stringify","Buffer","byteLength","valid","Function","RegExp","isNaN","Number","Error","type","a","b","toString","httptest","http2","toUpperCase","METHODS","includes"],"mappings":"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"}