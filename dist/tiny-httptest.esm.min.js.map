{"version":3,"file":"tiny-httptest.esm.min.js","sources":["../src/regex.js","../src/httptest.js"],"sourcesContent":["export const headersGet = /GET\\, HEAD\\, OPTIONS/;\nexport const headersContentType = /(, )?content-type(, )?/;\nexport const maybeJsonHeader = /^(application\\/(json|(x-)?javascript)|text\\/(javascript|x-javascript|x-json))/;\nexport const notEmpty = /\\w+/;\nexport const quoted = /^\".*\"$/;\n","import http from \"node:http\";\nimport {URL} from \"node:url\";\nimport {coerce} from \"tiny-coerce\";\nimport {\n\theadersContentType,\n\theadersGet,\n\tmaybeJsonHeader,\n\tnotEmpty,\n\tquoted\n} from \"./regex.js\";\n\nimport { createRequire } from \"node:module\";\nconst require = createRequire(import.meta.url);\nconst pkg = require(\"../package.json\");\nconst {homepage, version} = pkg;\n\nconst jar = new Map();\nconst captured = new Map();\nconst etags = new Map();\nconst jsonMimetype = \"application/json\";\n\nclass Httptest {\n\tconstructor (uri, method, headers, body, timeout) {\n\t\tconst parsed = new URL(uri);\n\n\t\tthis.body = \"\";\n\t\tthis.capture = new Set();\n\t\tthis.etag = false;\n\t\tthis.expects = new Map();\n\n\t\tthis.expects.set(\"status\", 0);\n\t\tthis.expects.set(\"body\", \"\");\n\t\tthis.expects.set(\"headers\", new Map());\n\t\tthis.expects.set(\"values\", new Map());\n\n\t\tthis.headers = {};\n\t\tthis.options = {\n\t\t\tbody: body,\n\t\t\thostname: parsed.hostname,\n\t\t\tmethod: method,\n\t\t\tpath: `${parsed.pathname}${parsed.search}`,\n\t\t\tport: parsed.port,\n\t\t\tprotocol: parsed.protocol,\n\t\t\theaders: headers,\n\t\t\ttimeout: timeout\n\t\t};\n\n\t\tthis.options.headers[\"user-agent\"] = `tiny-httptest bot/${version} (${homepage})`;\n\n\t\tif (parsed.username.trim().length > 0) {\n\t\t\tthis.options.auth = `${parsed.username}:${parsed.password}`;\n\t\t\tthis.options.headers.authorization = `Basic ${btoa(this.options.auth)}`;\n\t\t}\n\n\t\tif (this.options.body) {\n\t\t\tthis.send(this.options.body);\n\t\t}\n\n\t\tthis.jar = false;\n\t\tthis.req = null;\n\t\tthis.res = null;\n\t\tthis.reuse = new Set();\n\t\tthis.status = 0;\n\t}\n\n\tcaptureHeader (name) {\n\t\tif (!this.capture.has(name)) {\n\t\t\tthis.capture.add(name);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tcookies (state = true) {\n\t\tthis.jar = state;\n\n\t\treturn this;\n\t}\n\n\tcors (arg, success = true) {\n\t\tconst origin = arg || this.options.hostname;\n\n\t\tthis.options.headers.origin = origin;\n\t\tthis.options.headers[\"access-control-request-headers\"] = \"content-type\";\n\n\t\tif (success) {\n\t\t\tthis.expectHeader(\"access-control-allow-methods\", headersGet);\n\t\t\tthis.expectHeader(\"access-control-allow-origin\", origin);\n\t\t\tthis.expectHeader(\"access-control-allow-credentials\", \"true\");\n\n\t\t\tif (this.options.method === \"OPTIONS\") {\n\t\t\t\tthis.expectHeader(\"access-control-allow-headers\", headersContentType);\n\t\t\t} else {\n\t\t\t\tthis.expectHeader(\"access-control-expose-headers\", headersContentType);\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tend () {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst done = err => {\n\t\t\t\tif (err !== void 0) {\n\t\t\t\t\treject(err);\n\t\t\t\t} else {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.process();\n\t\t\t\t\t\tresolve(this);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treject(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (!this.req) {\n\t\t\t\tconst cmd = this.http1Request;\n\n\t\t\t\tif (this.jar) {\n\t\t\t\t\tconst cookie = jar.get(`${this.options.hostname}:${this.options.port}`);\n\n\t\t\t\t\tif (cookie) {\n\t\t\t\t\t\tthis.options.headers.cookie = cookie;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.etag) {\n\t\t\t\t\tconst etag = etags.get(`${this.options.hostname}:${this.options.port}${this.options.path}`);\n\n\t\t\t\t\tif (etag) {\n\t\t\t\t\t\tthis.options.headers[\"if-none-match\"] = etag;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.reuse.size > 0) {\n\t\t\t\t\tthis.reuse.forEach(k => {\n\t\t\t\t\t\tif (captured.has(k)) {\n\t\t\t\t\t\t\tthis.options.headers[k] = captured.get(k);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tcmd.call(this).then(() => done(), done);\n\t\t\t} else {\n\t\t\t\tdone();\n\t\t\t}\n\t\t});\n\t}\n\n\tetags (state = true) {\n\t\tthis.etag = state;\n\n\t\treturn this;\n\t}\n\n\texpectBody (value = notEmpty) {\n\t\tthis.expects.set(\"body\", value);\n\n\t\treturn this;\n\t}\n\n\texpectHeader (name, value = notEmpty) {\n\t\tthis.expects.get(\"headers\").set(name.toLowerCase(), value);\n\n\t\treturn this;\n\t}\n\n\texpectJson () {\n\t\tthis.options.headers.accept = jsonMimetype;\n\n\t\treturn this.expectHeader(\"content-type\", maybeJsonHeader);\n\t}\n\n\texpectStatus (value = 200) {\n\t\tthis.expects.set(\"status\", value);\n\n\t\treturn this;\n\t}\n\n\texpectValue (name, value) {\n\t\tthis.expectJson();\n\t\tthis.expects.get(\"values\").set(name, value);\n\n\t\treturn this;\n\t}\n\n\thttp1Request () {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.req = http.request(this.options, res => {\n\t\t\t\tthis.res = res;\n\t\t\t\tres.setEncoding(\"utf8\");\n\n\t\t\t\tres.on(\"data\", chunk => {\n\t\t\t\t\tthis.body += chunk;\n\t\t\t\t});\n\n\t\t\t\tres.on(\"end\", resolve);\n\t\t\t});\n\n\t\t\tthis.req.on(\"error\", reject);\n\n\t\t\tif (this.options.body) {\n\t\t\t\tthis.req.write(this.options.body);\n\t\t\t}\n\n\t\t\tthis.req.end();\n\t\t});\n\t}\n\n\tjson (arg = undefined) {\n\t\tthis.options.headers[\"content-type\"] = jsonMimetype;\n\n\t\tif (arg !== undefined) {\n\t\t\tthis.send(arg);\n\t\t}\n\n\t\treturn this.expectJson();\n\t}\n\n\tprocess () {\n\t\tconst body = this.expects.get(\"body\"),\n\t\t\tstatus = this.expects.get(\"status\");\n\n\t\tthis.headers = this.res.headers;\n\t\tthis.status = this.res.statusCode;\n\n\t\tif (status && this.status !== status) {\n\t\t\tthis.test(this.status, status, this.warning(\"status\", this.status, status));\n\t\t}\n\n\t\tthis.expects.get(\"headers\").forEach((v, k) => this.test(v, this.headers[k], this.warning(\"header\", v, coerce(this.headers[k]), k)));\n\n\t\tif (this.body && maybeJsonHeader.test(this.headers[\"content-type\"] || \"\")) {\n\t\t\ttry {\n\t\t\t\tthis.body = JSON.parse(this.body);\n\t\t\t} catch (e) {\n\t\t\t\tvoid 0;\n\t\t\t}\n\t\t}\n\n\t\tif (body) {\n\t\t\tthis.test(body, this.body, this.warning(\"body\", this.body, body));\n\t\t}\n\n\t\tthis.expects.get(\"values\").forEach((v, k) => this.test(v, this.body[k], this.warning(\"body\", v, this.body[k])));\n\n\t\tif (this.capture.size > 0) {\n\t\t\tthis.capture.forEach(k => {\n\t\t\t\tif (this.headers[k] !== undefined) {\n\t\t\t\t\tcaptured.set(k, this.headers[k]);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.jar && this.headers[\"set-cookie\"]) {\n\t\t\tjar.set(this.options.hostname + \":\" + this.options.port, this.headers[\"set-cookie\"]);\n\t\t}\n\n\t\tif (this.etag && this.headers.etag) {\n\t\t\tetags.set(this.options.hostname + \":\" + this.options.port + this.options.path, this.headers.etag);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\treuseHeader (name) {\n\t\tif (!this.reuse.has(name)) {\n\t\t\tthis.reuse.add(name);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tsend (arg) {\n\t\tconst type = typeof arg;\n\t\tlet body = arg;\n\n\t\tif (type !== \"string\") {\n\t\t\ttry {\n\t\t\t\tbody = JSON.stringify(body, null, 0);\n\n\t\t\t\tif (!this.options.headers[\"content-type\"]) {\n\t\t\t\t\tthis.options.headers[\"content-type\"] = jsonMimetype;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tvoid 0;\n\t\t\t}\n\t\t} else if (quoted.test(body) === false) {\n\t\t\ttry {\n\t\t\t\tbody = JSON.stringify(body);\n\t\t\t} catch (e) {\n\t\t\t\tvoid 0;\n\t\t\t}\n\t\t}\n\n\t\tthis.options.body = body;\n\t\tthis.options.headers[\"content-length\"] = Buffer.byteLength(body);\n\n\t\treturn this;\n\t}\n\n\ttest (arg, value, err) {\n\t\tlet valid;\n\n\t\tif (arg instanceof Function) {\n\t\t\ttry {\n\t\t\t\tvalid = arg(value) === true;\n\t\t\t} catch (e) {\n\t\t\t\tvalid = false;\n\t\t\t}\n\t\t} else if (arg instanceof RegExp) {\n\t\t\tvalid = arg !== void 0 && arg.test(value);\n\t\t} else if (typeof arg === \"object\" && typeof value === \"object\") {\n\t\t\tvalid = JSON.stringify(arg, null, 0) === JSON.stringify(value, null, 0);\n\t\t} else if (!isNaN(arg) && !isNaN(value)) {\n\t\t\tvalid = Number(arg) === Number(value);\n\t\t} else {\n\t\t\tvalid = arg === value;\n\t\t}\n\n\t\tif (!valid) {\n\t\t\tthrow new Error(err);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\twarning (type, a, b, k) {\n\t\tconst va = a instanceof RegExp ? `${a.toString()}.test(res.headers[\"${k}\"])` : JSON.stringify(a),\n\t\t\tvb = a instanceof RegExp ? true : JSON.stringify(b);\n\n\t\treturn `Unexpected ${type} value: ${va} !== ${vb}`;\n\t}\n}\n\nexport function httptest ({url = \"http://localhost\", method = \"GET\", body = null, headers = {}, timeout = 30000, http2 = false} = {}) {\n\tconst type = method.toUpperCase();\n\n\tif (http.METHODS.includes(type) === false) {\n\t\tthrow new Error(\"Invalid HTTP method\");\n\t}\n\n\treturn new Httptest(url, type, headers, body, timeout, http2);\n}\n"],"names":["headersGet","headersContentType","maybeJsonHeader","notEmpty","quoted","pkg","createRequire","import","meta","url","require","homepage","version","jar","Map","captured","etags","Httptest","constructor","uri","method","headers","body","timeout","parsed","URL","this","capture","Set","etag","expects","set","options","hostname","path","pathname","search","port","protocol","username","trim","length","auth","password","authorization","btoa","send","req","res","reuse","status","captureHeader","name","has","add","cookies","state","cors","arg","success","origin","expectHeader","end","Promise","resolve","reject","done","err","process","e","cmd","http1Request","cookie","get","size","forEach","k","call","then","expectBody","value","toLowerCase","expectJson","accept","expectStatus","expectValue","http","request","setEncoding","on","chunk","write","json","undefined","statusCode","test","warning","v","coerce","JSON","parse","reuseHeader","stringify","Buffer","byteLength","valid","Function","RegExp","isNaN","Number","Error","type","a","b","toString","httptest","http2","toUpperCase","METHODS","includes"],"mappings":"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"}